asyncapi: 3.0.0
info:
  title: Task Management System
  version: 1.0.0
  description: |
    Async API specification for Task Management System that handles task lifecycle 
    between Creators, Freelancers, and Assignees.
  contact:
    name: Task Management Team
    url: https://taskmanagement.org
    email: team@taskmanagement.org

servers:
  production:
    host: "events.taskmanagement.com:9092"
    protocol: "kafka"
    description: "Production broker"
    security:
      - $ref: '#/components/securitySchemes/user-password'

defaultContentType: application/json

channels:
  taskEvents:
    address: "task-management/tasks"
    messages:
      taskCreated:
        $ref: '#/components/messages/taskCreated'
      taskAssigned:
        $ref: '#/components/messages/taskAssigned'
      taskProcessed:
        $ref: '#/components/messages/taskProcessed'
      taskCompleted:
        $ref: '#/components/messages/taskCompleted'

operations:
  publishTaskCreated:
    action: send
    channel:
      $ref: '#/channels/taskEvents'
    messages:
      - $ref: '#/components/messages/taskCreated'

  publishTaskAssigned:
    action: send
    channel:
      $ref: '#/channels/taskEvents'
    messages:
      - $ref: '#/components/messages/taskAssigned'

  publishTaskProcessed:
    action: send
    channel:
      $ref: '#/channels/taskEvents'
    messages:
      - $ref: '#/components/messages/taskProcessed'

  publishTaskCompleted:
    action: send
    channel:
      $ref: '#/channels/taskEvents'
    messages:
      - $ref: '#/components/messages/taskCompleted'

components:
  messages:
    taskCreated:
      name: TaskCreated
      title: Task Created Event
      summary: Indicates that a new task has been created
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/TaskCreatedPayload'

    taskAssigned:
      name: TaskAssigned
      title: Task Assigned Event
      summary: Indicates that a task has been assigned to a freelancer
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/TaskAssignedPayload'

    taskProcessed:
      name: TaskProcessed
      title: Task Processed Event
      summary: Indicates that a task is being processed
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/TaskProcessedPayload'

    taskCompleted:
      name: TaskCompleted
      title: Task Completed Event
      summary: Indicates that a task has been completed
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/TaskCompletedPayload'

  schemas:
    MessageHeader:
      type: object
      required:
        - correlationId
        - messageId
        - source
      properties:
        correlationId:
          type: string
          format: uuid
          description: Identifier to trace end-to-end task journey
        messageId:
          type: string
          format: uuid
          description: Unique identifier for this message
        source:
          type: string
          description: Source system generating the event
          minLength: 2
          maxLength: 20

    TaskCreatedPayload:
      type: object
      required:
        - taskId
        - title
        - status
        - creatorId
      properties:
        taskId:
          type: string
          format: uuid
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          maxLength: 2000
        status:
          type: string
          enum: [NEW]
        dueDate:
          type: string
          format: date-time
        creatorId:
          type: string
          format: uuid
        inboxId:
          type: string
          format: uuid

    TaskAssignedPayload:
      type: object
      required:
        - taskId
        - freelancerId
        - assigneeId
        - status
      properties:
        taskId:
          type: string
          format: uuid
        freelancerId:
          type: string
          format: uuid
        assigneeId:
          type: string
          format: uuid
        status:
          type: string
          enum: [ASSIGNED]

    TaskProcessedPayload:
      type: object
      required:
        - taskId
        - status
      properties:
        taskId:
          type: string
          format: uuid
        status:
          type: string
          enum: [IN_PROGRESS]
        progress:
          type: integer
          minimum: 0
          maximum: 100

    TaskCompletedPayload:
      type: object
      required:
        - taskId
        - status
        - completedBy
      properties:
        taskId:
          type: string
          format: uuid
        status:
          type: string
          enum: [DONE]
        completedBy:
          type: string
          format: uuid
        completedAt:
          type: string
          format: date-time

  securitySchemes:
    user-password:
      type: userPassword
      description: Basic authentication for event broker
