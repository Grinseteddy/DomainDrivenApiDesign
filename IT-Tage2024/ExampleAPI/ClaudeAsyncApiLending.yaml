asyncapi: 3.0.0
info:
  title: Lending Service
  version: 1.0.0
  description: |
    AsyncAPI specification for the Lending Service which manages book lending operations,
    reading lists, and reading behavior tracking.
  contact:
    name: Library Team
    url: https://library.sample.org
    email: library.team@sample.org

servers:
  production:
    host: "events.library.com:9092"
    protocol: "kafka"
    description: "Production broker"
    security:
      - $ref: '#/components/securitySchemes/user-password'

defaultContentType: application/json

channels:
  readingList/created:
    address: "lending/readingList.created"
    messages:
      readingListCreated:
        $ref: '#/components/messages/readingListCreated'

  readingList/updated:
    address: "lending/readingList.updated"
    messages:
      readingListUpdated:
        $ref: '#/components/messages/readingListUpdated'

  book/borrowed:
    address: "lending/book.borrowed"
    messages:
      bookBorrowed:
        $ref: '#/components/messages/bookBorrowed'

  book/returned:
    address: "lending/book.returned"
    messages:
      bookReturned:
        $ref: '#/components/messages/bookReturned'

  reading/statusUpdated:
    address: "lending/reading.statusUpdated"
    messages:
      readingStatusUpdated:
        $ref: '#/components/messages/readingStatusUpdated'

  book/tagged:
    address: "lending/book.tagged"
    messages:
      bookTagged:
        $ref: '#/components/messages/bookTagged'

operations:
  readingListCreated:
    action: "send"
    channel:
      $ref: "#/channels/readingList/created"

  readingListUpdated:
    action: "send"
    channel:
      $ref: "#/channels/readingList/updated"

  bookBorrowed:
    action: "send"
    channel:
      $ref: "#/channels/book/borrowed"

  bookReturned:
    action: "send"
    channel:
      $ref: "#/channels/book/returned"

  readingStatusUpdated:
    action: "send"
    channel:
      $ref: "#/channels/reading/statusUpdated"

  bookTagged:
    action: "send"
    channel:
      $ref: "#/channels/book/tagged"

components:
  messages:
    readingListCreated:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/ReadingList'

    readingListUpdated:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/ReadingList'

    bookBorrowed:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/BorrowedBook'

    bookReturned:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/ReturnedBook'

    readingStatusUpdated:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/ReadingStatus'

    bookTagged:
      headers:
        $ref: '#/components/schemas/MessageHeader'
      payload:
        $ref: '#/components/schemas/BookTag'

  schemas:
    ReadingList:
      type: object
      required:
        - readingListId
        - userId
        - books
      properties:
        readingListId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        books:
          type: array
          items:
            $ref: '#/components/schemas/BookReference'
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    BookReference:
      type: object
      required:
        - bookId
        - status
      properties:
        bookId:
          type: string
          format: uuid
        status:
          type: string
          enum: [TO_BE_READ, READING, FINISHED]
        addedAt:
          type: string
          format: date-time

    BorrowedBook:
      type: object
      required:
        - bookId
        - userId
        - borrowedAt
      properties:
        bookId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        borrowedAt:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time

    ReturnedBook:
      type: object
      required:
        - bookId
        - userId
        - returnedAt
      properties:
        bookId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        returnedAt:
          type: string
          format: date-time
        condition:
          type: string
          enum: [EXCELLENT, GOOD, FAIR, POOR]

    ReadingStatus:
      type: object
      required:
        - bookId
        - userId
        - status
      properties:
        bookId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        status:
          type: string
          enum: [TO_BE_READ, READING, FINISHED]
        updatedAt:
          type: string
          format: date-time
        progress:
          type: integer
          minimum: 0
          maximum: 100
          description: Reading progress in percentage

    BookTag:
      type: object
      required:
        - bookId
        - userId
        - tags
      properties:
        bookId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
        taggedAt:
          type: string
          format: date-time

    MessageHeader:
      description: Header Information for each message
      type: object
      required:
        - correlationId
        - messageId
      properties:
        correlationId:
          description: Identifier to trace end-to-end-api-journey
          type: string
          format: uuid
          examples:
            - b3416449-5f69-4cd2-a6c4-1ff82da96bce
        messageId:
          description: Identifier for the particular message
          type: string
          format: uuid
          examples:
            - 5a1d305b-19f3-46eb-ada1-9a9770e56fd1
        source:
          description: Application name creating the message
          type: string
          minLength: 2
          maxLength: 20
          examples:
            - LendingService

  securitySchemes:
    user-password:
      type: userPassword
      description: Security scheme for events